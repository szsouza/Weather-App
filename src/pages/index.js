import Head from 'next/head'
import { useState } from 'react'
import axios from 'axios'
import styles from '../styles/Home.module.css'


export default function Home() {
  const [data, setData] = useState({})
  const [location, setLocation] = useState('')

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=${process.env.NEXT_PUBLIC_API_KEY}`

  const searchLocation = (event) => {
    if(event.key === 'Enter') {
      axios.get(url).then((res) => {
        setData(res.data)
      })
      setLocation('')
    }
    
  }
  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    <div className={styles.app}>
      <div className={styles.search}>
        <input value={location} onChange={event => setLocation(event.target.value)} onKeyPress={searchLocation} placeholder='Enter Location' type='text'/>
      </div>
      <div className={styles.container}>
        <div className={styles.top}>
          <div className='location'>
            <p>{data.name}</p>
          </div>
          <div className='temp'>
            {data.main ? <h1>{data.main.temp.toFixed()}ÂºF</h1> : null}
          </div>
          <div className={styles.description}>
            {data.weather ? <p>{data.weather[0].main}</p> : null}
            
          </div>
        </div>

    {data.name != undefined &&
    
    <div className={styles.bottom}>
          <div className='feels'>
            {data.main ? <p className={styles.bold}>{data.main.feels_like.toFixed()}</p> : null}
            <p>Feels Like</p>
          </div>
          <div className='umidity'>
            {data.main ? <p className={styles.bold}>{data.main.humidity}%</p> : null}
            <p>Humidity</p>
          </div>
          <div className='wind'>
            {data.wind ? <p className={styles.bold}>{data.wind.speed.toFixed()} MPH</p> : null}
            <p>Wind Speed</p>
          </div>
        </div>

    }




      </div>
    </div>
    </>
  )
}
